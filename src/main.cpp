#include <iostream>
#include <filesystem>
#include <bitset>
#include <boost\program_options.hpp>
#include <cstdlib>

namespace
{
    std::bitset<4> parseArgumentFirst(int argc, const char **argv)
    {
        std::bitset<4> flags;
        boost::program_options::options_description description("Activate Windows built-in Administrator account and some useful tools.\r\n");
        description.add_options()("help,h", "show help")("verbose,V", "enable Verbose Mode.")("version,v", "Show Version.")
                                ("status,s", "show exploit status.")("edit-registry,r", "enter registry edit mode.")
                                ("exploit", "execute exploit.")("revert", "reset exploit.");

        boost::program_options::variables_map vm;
        store(boost::program_options::parse_command_line(argc, argv, description), vm);
        notify(vm);
        if (vm.count("help"))
        {
            std::cout << description << std::endl;
            std::exit(0);
        }
        if (vm.count("version"))
        {
            std::cout << "schoolpc_exploit v0.01" << std::endl;
            std::exit(0);
        }
        if(vm.count("edit-registry"))
        {
            std::system("notepad.exe");
            std::exit(0);
        }
        if(vm.count("revert"))
        {
            // expect 0001
            flags.set(0);
        }
        if(vm.count("exploit"))
        {
            // expect 0010
            flags.set(1);
        }
        if(vm.count("status"))
        {
            // expect 0100
            flags.set(2);
        }
        if(vm.count("verbose"))
        {
            // expect 1000
            flags.set(3);
        }
        return flags;
    }
} // namespace

int main(int argc, const char **argv)
{
    parseArgumentFirst(argc, argv);
    return 0;
}